{"ast":null,"code":"var _jsxFileName = \"/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/LoadJobApplicantsByJobId.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userInfo } from \"../../../utils/auth\";\nimport { loadJobApplicantsByJobId } from \"../../../api/apiClient\";\nimport Layout from \"../../Layout\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { showLoading, showSuccess, showError } from \"../../../utils/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadJobApplicantsByJobId = () => {\n  _s();\n  const {\n    job_id\n  } = useParams();\n  const [resData, setResData] = useState(null);\n  const [selected, setSelected] = useState(false);\n  const [rejected, setRejected] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const {\n      token,\n      id\n    } = userInfo();\n    loadJobApplicantsByJobId(token, job_id, id).then(res => {\n      setResData(res.data);\n    }).catch(err => {});\n  }, []);\n  const handleSelect = () => {};\n  const handleReject = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Job Applicants\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Select,Reject, if selected insert to a new Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [showLoading(loading), showError(error, \"You have already applied for this job\"), showSuccess(success, \"You have applied for the job\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: resData && resData.map(data => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            children: data.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            size: \"sm\",\n            style: {\n              margin: \"1%\",\n              float: \"right\"\n            },\n            onclick: handleReject,\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            size: \"sm\",\n            style: {\n              margin: \"1%\",\n              float: \"right\"\n            },\n            onclick: handleSelect,\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadJobApplicantsByJobId, \"iuLTDwqqskS8fYlOXTEbmr9Asow=\", false, function () {\n  return [useParams];\n});\n_c = LoadJobApplicantsByJobId;\nexport default LoadJobApplicantsByJobId;\nvar _c;\n$RefreshReg$(_c, \"LoadJobApplicantsByJobId\");","map":{"version":3,"names":["React","useEffect","useState","useParams","userInfo","loadJobApplicantsByJobId","Layout","ListGroup","ListGroupItem","Button","Link","showLoading","showSuccess","showError","LoadJobApplicantsByJobId","job_id","resData","setResData","selected","setSelected","rejected","setRejected","success","setSuccess","loading","setLoading","error","setError","token","id","then","res","data","catch","err","handleSelect","handleReject","width","map","email","margin","float"],"sources":["/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/LoadJobApplicantsByJobId.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userInfo } from \"../../../utils/auth\";\nimport { loadJobApplicantsByJobId } from \"../../../api/apiClient\";\nimport Layout from \"../../Layout\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { showLoading, showSuccess, showError } from \"../../../utils/messages\";\n\nconst LoadJobApplicantsByJobId = () => {\n    const { job_id } = useParams();\n    const [resData, setResData] = useState(null);\n    const [selected, setSelected] = useState(false);\n    const [rejected, setRejected] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const { token, id } = userInfo();\n        loadJobApplicantsByJobId(token, job_id, id)\n            .then(res => {\n                setResData(res.data);\n            })\n            .catch(err => { })\n    }, []);\n\n    const handleSelect = () => {\n\n    }\n\n    const handleReject = () => {\n\n\n    }\n    return (\n        <div>\n            <Layout title=\"Job Applicants\" className=\"container\">\n                <h5>Select,Reject, if selected insert to a new Table</h5>\n                <div style={{ width: '100%' }}>\n                    {showLoading(loading)}\n                    {showError(error, \"You have already applied for this job\")}\n                    {showSuccess(success, \"You have applied for the job\")}\n                </div>\n                <ListGroup>\n                    {resData && resData.map(data =>\n                    (<ListGroupItem>\n                        <Link>{data.email}</Link>\n                        <Button color=\"danger\" size=\"sm\" style={{ margin: \"1%\", float: \"right\" }} onclick={handleReject}>Reject</Button>\n                        <Button color=\"success\" size=\"sm\" style={{ margin: \"1%\", float: \"right\" }} onclick={handleSelect}>Select</Button>\n                    </ListGroupItem>)\n                    )}\n                </ListGroup>\n            </Layout>\n        </div>\n    )\n}\n\nexport default LoadJobApplicantsByJobId;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}