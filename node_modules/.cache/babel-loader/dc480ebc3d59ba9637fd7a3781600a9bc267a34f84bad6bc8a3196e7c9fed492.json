{"ast":null,"code":"var _jsxFileName = \"/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/JobAdvertise.js\",\n  _s = $RefreshSig$();\nimport Layout from \"../../Layout\";\nimport React, { useState } from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagField = () => {\n  _s();\n  const [tags, setTags] = useState([]);\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    if (event.key === 'Enter' && inputValue) {\n      setTags([...tags, inputValue.trim()]);\n      event.target.value = '';\n    }\n  };\n  const handleTagDelete = tagIndex => {\n    setTags(tags.filter((_, index) => index !== tagIndex));\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"New Job Advertise Page\",\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Add tags separated by commas\",\n            onKeyDown: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"append\",\n            children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: [tag, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tag-delete\",\n                onClick: () => handleTagDelete(index),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(TagField, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n_c = TagField;\nexport default TagField;\nvar _c;\n$RefreshReg$(_c, \"TagField\");","map":{"version":3,"names":["Layout","React","useState","Input","InputGroup","InputGroupAddon","InputGroupText","TagField","tags","setTags","handleInputChange","event","inputValue","target","value","key","trim","handleTagDelete","tagIndex","filter","_","index","map","tag"],"sources":["/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/JobAdvertise.js"],"sourcesContent":["\nimport Layout from \"../../Layout\";\n\nimport React, { useState } from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nconst TagField = () => {\n    const [tags, setTags] = useState([]);\n\n    const handleInputChange = (event) => {\n        const inputValue = event.target.value;\n        if (event.key === 'Enter' && inputValue) {\n            setTags([...tags, inputValue.trim()]);\n            event.target.value = '';\n        }\n    };\n\n    const handleTagDelete = (tagIndex) => {\n        setTags(tags.filter((_, index) => index !== tagIndex));\n    };\n\n    return (\n        <Layout title=\"New Job Advertise Page\" className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>Tags</InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Add tags separated by commas\"\n                            onKeyDown={handleInputChange}\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                            {tags.map((tag, index) => (\n                                <InputGroupText key={index}>\n                                    {tag}{' '}\n                                    <span\n                                        className=\"tag-delete\"\n                                        onClick={() => handleTagDelete(index)}\n                                    >\n                                        x\n                                    </span>\n                                </InputGroupText>\n                            ))}\n                        </InputGroupAddon>\n                    </InputGroup>\n                </div>\n            </div>\n        </Layout>\n\n    );\n};\n\nexport default TagField;\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,cAAc;AAEjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,UAAU,EAAEC,eAAe,EAAEC,cAAc,QAAQ,YAAY;AAAC;AAEhF,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrC,IAAIH,KAAK,CAACI,GAAG,KAAK,OAAO,IAAIH,UAAU,EAAE;MACrCH,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEI,UAAU,CAACI,IAAI,EAAE,CAAC,CAAC;MACrCL,KAAK,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE;IAC3B;EACJ,CAAC;EAED,MAAMG,eAAe,GAAIC,QAAQ,IAAK;IAClCT,OAAO,CAACD,IAAI,CAACW,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKH,QAAQ,CAAC,CAAC;EAC1D,CAAC;EAED,oBACI,QAAC,MAAM;IAAC,KAAK,EAAC,wBAAwB;IAAC,SAAS,EAAC,iBAAiB;IAAA,uBAC9D;MAAK,SAAS,EAAC,KAAK;MAAA,uBAChB;QAAK,SAAS,EAAC,WAAW;QAAA,uBACtB,QAAC,UAAU;UAAA,wBACP,QAAC,eAAe;YAAC,SAAS,EAAC,SAAS;YAAA,uBAChC,QAAC,cAAc;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA;UAAiB;YAAA;YAAA;YAAA;UAAA,QACvB,eAClB,QAAC,KAAK;YACF,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,8BAA8B;YAC1C,SAAS,EAAER;UAAkB;YAAA;YAAA;YAAA;UAAA,QAC/B,eACF,QAAC,eAAe;YAAC,SAAS,EAAC,QAAQ;YAAA,UAC9BF,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEF,KAAK,kBACjB,QAAC,cAAc;cAAA,WACVE,GAAG,EAAE,GAAG,eACT;gBACI,SAAS,EAAC,YAAY;gBACtB,OAAO,EAAE,MAAMN,eAAe,CAACI,KAAK,CAAE;gBAAA,UACzC;cAED;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA,GAPUA,KAAK;cAAA;cAAA;cAAA;YAAA,QAS7B;UAAC;YAAA;YAAA;YAAA;UAAA,QACY;QAAA;UAAA;UAAA;UAAA;QAAA;MACT;QAAA;QAAA;QAAA;MAAA;IACX;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACD;AAGjB,CAAC;AAAC,GA/CId,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}