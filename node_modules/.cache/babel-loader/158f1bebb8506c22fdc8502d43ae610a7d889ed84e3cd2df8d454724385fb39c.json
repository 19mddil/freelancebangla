{"ast":null,"code":"var _jsxFileName = \"/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/worker/Application.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { confirmApplication } from \"../../../api/apiWorker\";\nimport { userInfo } from \"../../../utils/auth\";\nimport Layout from \"../../Layout\";\nimport { useParams } from 'react-router-dom';\nimport { showSuccess, showError, showLoading } from '../../../utils/messages';\nimport ApplicationModal from \"./ApplicationModal\";\nimport { getJobAdvertiseDetails } from \"../../../api/apiWorker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Application = () => {\n  _s();\n  const {\n    job_id\n  } = useParams();\n  const [userId, setUserId] = useState('');\n  const [job, setJob] = useState({});\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState('');\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  useEffect(() => {\n    const {\n      token,\n      id\n    } = userInfo();\n    setToken(token);\n    setUserId(id);\n    getJobAdvertiseDetails(token, job_id).then(res => {\n      setJob(res.data);\n    }).catch(err => setError(\"Failed to load the advertised job\"));\n  }, []);\n  const handleClick = () => {\n    setLoading(true);\n    confirmApplication(token, {\n      job_id: job.id,\n      applicant_id: userId\n    }).then(res => {\n      setSuccess(true);\n      setLoading(false);\n      toggle();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Apply Job\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [showLoading(loading), showError(error, error), showSuccess(success, \"You have applied for the job\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ApplicationModal, {\n        job: job,\n        toggle: toggle,\n        modal: modal,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Application, \"RI9z1I1+Fwsv19PqvC6OXXVm1m0=\", false, function () {\n  return [useParams];\n});\n_c = Application;\nexport default Application;\nvar _c;\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"names":["React","useEffect","useState","confirmApplication","userInfo","Layout","useParams","showSuccess","showError","showLoading","ApplicationModal","getJobAdvertiseDetails","Application","job_id","userId","setUserId","job","setJob","error","setError","success","setSuccess","loading","setLoading","token","setToken","modal","setModal","toggle","id","then","res","data","catch","err","handleClick","applicant_id","width"],"sources":["/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/worker/Application.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { confirmApplication } from \"../../../api/apiWorker\";\nimport { userInfo } from \"../../../utils/auth\";\nimport Layout from \"../../Layout\";\nimport { useParams } from 'react-router-dom';\nimport { showSuccess, showError, showLoading } from '../../../utils/messages';\nimport ApplicationModal from \"./ApplicationModal\";\nimport { getJobAdvertiseDetails } from \"../../../api/apiWorker\";\n\nconst Application = () => {\n\n    const { job_id } = useParams();\n    const [userId, setUserId] = useState('');\n    const [job, setJob] = useState({});\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [token, setToken] = useState('');\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n\n    useEffect(() => {\n        const { token, id } = userInfo();\n        setToken(token);\n        setUserId(id);\n        getJobAdvertiseDetails(token, job_id)\n            .then(res => {\n                setJob(res.data);\n            })\n            .catch(err => setError(\"Failed to load the advertised job\"))\n    }, []);\n\n    const handleClick = () => {\n        setLoading(true);\n        confirmApplication(token, { job_id: job.id, applicant_id: userId })\n            .then(res => {\n                setSuccess(true);\n                setLoading(false);\n                toggle();\n            })\n    }\n\n    return (\n        <div>\n            <Layout title=\"Apply Job\" className=\"container\">\n                <div style={{ width: '100%' }}>\n                    {showLoading(loading)}\n                    {showError(error, error)}\n                    {showSuccess(success, \"You have applied for the job\")}\n                </div>\n                <ApplicationModal job={job} toggle={toggle} modal={modal} handleClick={handleClick} />\n            </Layout>\n        </div>\n    )\n}\n\nexport default Application;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,sBAAsB,QAAQ,wBAAwB;AAAC;AAEhE,MAAMC,WAAW,GAAG,MAAM;EAAA;EAEtB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,EAAE;EAC9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM0B,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAK,CAAC;EAErCzB,SAAS,CAAC,MAAM;IACZ,MAAM;MAAEuB,KAAK;MAAEK;IAAG,CAAC,GAAGzB,QAAQ,EAAE;IAChCqB,QAAQ,CAACD,KAAK,CAAC;IACfT,SAAS,CAACc,EAAE,CAAC;IACblB,sBAAsB,CAACa,KAAK,EAAEX,MAAM,CAAC,CAChCiB,IAAI,CAACC,GAAG,IAAI;MACTd,MAAM,CAACc,GAAG,CAACC,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIf,QAAQ,CAAC,mCAAmC,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,WAAW,GAAG,MAAM;IACtBZ,UAAU,CAAC,IAAI,CAAC;IAChBpB,kBAAkB,CAACqB,KAAK,EAAE;MAAEX,MAAM,EAAEG,GAAG,CAACa,EAAE;MAAEO,YAAY,EAAEtB;IAAO,CAAC,CAAC,CAC9DgB,IAAI,CAACC,GAAG,IAAI;MACTV,UAAU,CAAC,IAAI,CAAC;MAChBE,UAAU,CAAC,KAAK,CAAC;MACjBK,MAAM,EAAE;IACZ,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,SAAS,EAAC,WAAW;MAAA,wBAC3C;QAAK,KAAK,EAAE;UAAES,KAAK,EAAE;QAAO,CAAE;QAAA,WACzB5B,WAAW,CAACa,OAAO,CAAC,EACpBd,SAAS,CAACU,KAAK,EAAEA,KAAK,CAAC,EACvBX,WAAW,CAACa,OAAO,EAAE,8BAA8B,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACnD,eACN,QAAC,gBAAgB;QAAC,GAAG,EAAEJ,GAAI;QAAC,MAAM,EAAEY,MAAO;QAAC,KAAK,EAAEF,KAAM;QAAC,WAAW,EAAES;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACjF;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GA7CKvB,WAAW;EAAA,QAEMN,SAAS;AAAA;AAAA,KAF1BM,WAAW;AA+CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}