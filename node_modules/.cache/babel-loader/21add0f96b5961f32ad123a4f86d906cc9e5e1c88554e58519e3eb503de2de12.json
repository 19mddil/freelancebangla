{"ast":null,"code":"var _jsxFileName = \"/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/LoadJobApplicantsByJobId.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userInfo } from \"../../../utils/auth\";\nimport { loadJobApplicantsByJobId, selectWorkersApplication } from \"../../../api/apiClient\";\nimport Layout from \"../../Layout\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { showLoading, showSuccess, showError } from \"../../../utils/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadJobApplicantsByJobId = () => {\n  _s();\n  const {\n    job_id\n  } = useParams();\n  const [tkn, setTkn] = useState('');\n  const [workerId, setWorkerId] = useState('');\n  const [resData, setResData] = useState(null);\n  const [selected, setSelected] = useState(false);\n  const [rejected, setRejected] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const {\n      token,\n      id\n    } = userInfo();\n    setWorkerId(id);\n    setTkn(token);\n    loadJobApplicantsByJobId(token, job_id, id).then(res => {\n      setResData(res.data);\n    }).catch(err => {});\n  }, []);\n  const handleSelect = applicationId => {\n    console.log(\"here\");\n    selectWorkersApplication(tkn, {\n      selected_application_id: applicationId\n    }).then(res => {\n      setSelected(true);\n      setSuccess(true);\n    }).catch(err => {\n      setSelected(false);\n    });\n  };\n  const handleReject = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Job Applicants\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Select,Reject, if selected insert to a new Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [showLoading(loading), showError(error, \"You have already applied for this job\"), showSuccess(success, \"The worker is selected\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: resData && resData.map(data => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            children: data.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            size: \"sm\",\n            style: {\n              margin: \"1%\",\n              float: \"right\"\n            },\n            onClick: () => handleReject(),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSelect(data.application_id),\n            disabled: data.selected,\n            color: \"success\",\n            size: \"sm\",\n            style: {\n              margin: \"1%\",\n              float: \"right\"\n            },\n            children: data.selected === true ? 'Selected' : 'Select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadJobApplicantsByJobId, \"23+j6RsgEIFI5Djm0J6oTXbQHJQ=\", false, function () {\n  return [useParams];\n});\n_c = LoadJobApplicantsByJobId;\nexport default LoadJobApplicantsByJobId;\nvar _c;\n$RefreshReg$(_c, \"LoadJobApplicantsByJobId\");","map":{"version":3,"names":["React","useEffect","useState","useParams","userInfo","loadJobApplicantsByJobId","selectWorkersApplication","Layout","ListGroup","ListGroupItem","Button","Link","showLoading","showSuccess","showError","LoadJobApplicantsByJobId","job_id","tkn","setTkn","workerId","setWorkerId","resData","setResData","selected","setSelected","rejected","setRejected","success","setSuccess","loading","setLoading","error","setError","token","id","then","res","data","catch","err","handleSelect","applicationId","console","log","selected_application_id","handleReject","width","map","email","margin","float","application_id"],"sources":["/home/mddil/Desktop/projects/freelancebangla/frontend/src/components/user/client/LoadJobApplicantsByJobId.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userInfo } from \"../../../utils/auth\";\nimport { loadJobApplicantsByJobId, selectWorkersApplication } from \"../../../api/apiClient\";\nimport Layout from \"../../Layout\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { showLoading, showSuccess, showError } from \"../../../utils/messages\";\n\nconst LoadJobApplicantsByJobId = () => {\n    const { job_id } = useParams();\n    const [tkn, setTkn] = useState('');\n    const [workerId, setWorkerId] = useState('');\n    const [resData, setResData] = useState(null);\n    const [selected, setSelected] = useState(false);\n    const [rejected, setRejected] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n\n\n    useEffect(() => {\n        const { token, id } = userInfo();\n        setWorkerId(id);\n        setTkn(token);\n        loadJobApplicantsByJobId(token, job_id, id)\n            .then(res => {\n                setResData(res.data);\n            })\n            .catch(err => { })\n    }, []);\n\n    const handleSelect = (applicationId) => {\n        console.log(\"here\");\n        selectWorkersApplication(tkn, {\n            selected_application_id: applicationId,\n        })\n            .then(res => {\n                setSelected(true);\n                setSuccess(true);\n\n            })\n            .catch(err => {\n                setSelected(false);\n            })\n    }\n\n\n    const handleReject = () => {\n\n\n    }\n    return (\n        <div>\n            <Layout title=\"Job Applicants\" className=\"container\">\n                <h5>Select,Reject, if selected insert to a new Table</h5>\n                <div style={{ width: '100%' }}>\n                    {showLoading(loading)}\n                    {showError(error, \"You have already applied for this job\")}\n                    {showSuccess(success, \"The worker is selected\")}\n                </div>\n                <ListGroup>\n                    {resData && resData.map(data =>\n                    (<ListGroupItem>\n                        <Link>{data.email}</Link>\n                        <Button color=\"danger\" size=\"sm\" style={{ margin: \"1%\", float: \"right\" }} onClick={() => handleReject()}>Reject</Button>\n                        <Button onClick={() => handleSelect(data.application_id)} disabled={data.selected} color=\"success\" size=\"sm\" style={{ margin: \"1%\", float: \"right\" }} >\n                            {data.selected === true ? 'Selected' : 'Select'}\n                        </Button>\n                    </ListGroupItem>)\n                    )}\n                </ListGroup>\n            </Layout>\n        </div>\n    )\n}\n\nexport default LoadJobApplicantsByJobId;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}